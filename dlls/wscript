#! /usr/bin/env python
# encoding: utf-8
# a1batross, mittorn, 2018

from waflib import Utils
import os

def options(opt):
	return

def configure(conf):
	if conf.env.COMPILER_CC == 'msvc':
		# hl.def removes MSVC function name decoration from GiveFnptrsToDll on Windows.
		# Without this, the lookup for this function fails.
		hlDefNode = conf.path.find_resource("./hl.def")

		if hlDefNode is not None:
			conf.env.append_value('LINKFLAGS', '/def:%s' % hlDefNode.abspath())
		else:
			conf.fatal("Could not find hl.def")

def build(bld):
	source = [
	'3wave/flags.cpp',
	'3wave/grapple.cpp',
	'3wave/runes.cpp',
	'3wave/threewave_gamerules.cpp',
	'aghl/agarena.cpp',
	'aghl/agglobal.cpp',
	'aghl/aglms.cpp',
	'aghl/agspectator.cpp',
	'aghl/agtimer.cpp',
	'dmc/quake_gun.cpp',
	'dmc/quake_items.cpp',
	'dmc/quake_nail.cpp',
	'dmc/quake_player.cpp',
	'dmc/quake_rocket.cpp',
	'dmc/quake_weapons_all.cpp',
	'dmc/observer.cpp',
#	'agrunt.cpp',
#	'airtank.cpp',
#	'aflock.cpp',
	'animating.cpp',
	'animation.cpp',
#	'apache.cpp',
#	'barnacle.cpp',
#	'barney.cpp',
#	'bigmomma.cpp',
#	'bloater.cpp',
	'bmodels.cpp',
#	'bullsquid.cpp',
	'buttons.cpp',
	'cbase.cpp',
	'client.cpp',
	'combat.cpp',
#	'controller.cpp',
#	'crossbow.cpp',
#	'crowbar.cpp',
#	'defaultai.cpp',
	'doors.cpp',
	'effects.cpp',
#	'egon.cpp',
	'explode.cpp',
#	'flyingmonster.cpp',
	'func_break.cpp',
#	'func_tank.cpp',
	'game.cpp',
	'gamerules.cpp',
#	'gargantua.cpp',
#	'gauss.cpp',
#	'genericmonster.cpp',
#	'ggrenade.cpp',
	'globals.cpp',
#	'glock.cpp',
#	'gman.cpp',
	'h_ai.cpp',
#	'h_battery.cpp',
#	'h_cine.cpp',
#	'h_cycler.cpp',
	'h_export.cpp',
#	'handgrenade.cpp',
#	'hassassin.cpp',
#	'headcrab.cpp',
#	'healthkit.cpp',
#	'hgrunt.cpp',
#	'hornet.cpp',
#	'hornetgun.cpp',
#	'houndeye.cpp',
#	'ichthyosaur.cpp',
#	'islave.cpp',
#	'items.cpp',
#	'leech.cpp',
	'lights.cpp',
	'maprules.cpp',
#	'monstermaker.cpp',
	'monsters.cpp',
#	'monsterstate.cpp',
#	'mortar.cpp',
#	'mp5.cpp',
	'mpstubb.cpp',
	'multiplay_gamerules.cpp',
#	'nihilanth.cpp',
#	'nodes.cpp',
#	'osprey.cpp',
	'pathcorner.cpp',
	'plane.cpp',
	'plats.cpp',
	'player.cpp',
#	'python.cpp',
#	'rat.cpp',
#	'roach.cpp',
#	'rpg.cpp',
#	'satchel.cpp',
	'schedule.cpp',
#	'scientist.cpp',
#	'scripted.cpp',
#	'shotgun.cpp',
	'singleplay_gamerules.cpp',
	'skill.cpp',
	'sound.cpp',
#	'soundent.cpp',
	'spectator.cpp',
#	'squadmonster.cpp',
#	'squeakgrenade.cpp',
	'subs.cpp',
#	'talkmonster.cpp',
	'teamplay_gamerules.cpp',
#	'tempmonster.cpp',
#	'tentacle.cpp',
	'triggers.cpp',
#	'tripmine.cpp',
#	'turret.cpp',
	'util.cpp',
	'vehicle.cpp',
	'weapons.cpp',
	'world.cpp',
#	'xen.cpp',
#	'zombie.cpp',
	'../pm_shared/pm_debug.c',
	'../pm_shared/pm_math.c',
	'../pm_shared/pm_shared.c',
	'../game_shared/vcs_info.cpp',
	]

	defines = []
	if bld.env.USE_VOICEMGR:
		source += ['../game_shared/voice_gamemgr.cpp']
	else:
		defines += ['NO_VOICEGAMEMGR']

	includes = Utils.to_list('. wpn_shared ../common ../engine ../pm_shared ../game_shared ../public dmc aghl 3wave ..')

	if bld.env.DEST_OS not in ['android', 'dos']:
		install_path = os.path.join(bld.env.GAMEDIR, bld.env.SERVER_INSTALL_DIR)
	else:
		install_path = bld.env.PREFIX

	bld.shlib(
		source   = source,
		target   = bld.env.SERVER_LIBRARY_NAME + bld.env.POSTFIX,
		name     = 'server',
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		install_path = install_path,
		idx = bld.get_taskgen_count()
	)

