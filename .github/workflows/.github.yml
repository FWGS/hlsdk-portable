name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cc: gcc
            cxx: g++
          - os: ubuntu-latest
            cc: clang
            cxx: clang++
          - os: windows-2016
            cc: cl
            cxx: cl
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout steam-runtime
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/checkout@v2
      with:
        repository: ValveSoftware/steam-runtime
        path: steam-runtime
    - name: Cache steam-runtime
      if: startsWith(matrix.os, 'ubuntu')
      id: cache-steam-runtime
      uses: actions/cache@v2
      with:
        path: com.valvesoftware.SteamRuntime.Sdk-i386-scout-sysroot.tar.gz
        key: ${{ runner.os }}-steam-runtime
    - name: Download steam-runtime
      if: startsWith(matrix.os, 'ubuntu') && steps.cache-steam-runtime.outputs.cache-hit != 'true'
      run: wget --no-verbose https://repo.steampowered.com/steamrt-images-scout/snapshots/0.20210610.0/com.valvesoftware.SteamRuntime.Sdk-i386-scout-sysroot.tar.gz
    - name: Install steam runtime
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        ./steam-runtime/setup_chroot.sh --i386 --tarball ./com.valvesoftware.SteamRuntime.Sdk-i386-scout-sysroot.tar.gz
        sudo sed -i 's/groups=sudo/groups=adm/g' /etc/schroot/chroot.d/steamrt_scout_i386.conf

    - name: Build with xash3d-fwgs input
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        schroot --chroot steamrt_scout_i386 -- cmake -B build -S . -DCMAKE_EXE_LINKER_FLAGS="-Wl,--no-undefined"
        schroot --chroot steamrt_scout_i386 -- cmake --build build --target all
    - name: Build with goldsource input
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        schroot --chroot steamrt_scout_i386 -- cmake -B build-gs -S . -DCMAKE_EXE_LINKER_FLAGS="-Wl,--no-undefined" -DGOLDSOURCE_SUPPORT=ON
        schroot --chroot steamrt_scout_i386 -- cmake --build build-gs --target all

    - name: Build with mingw
      if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.cc, 'gcc')
      run: |
        sudo apt-get install -y mingw-w64-i686-dev binutils-mingw-w64-i686 gcc-mingw-w64-i686 g++-mingw-w64-i686
        cmake -B build-mingw -S . -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_C_COMPILER=i686-w64-mingw32-gcc -DCMAKE_CXX_COMPILER=i686-w64-mingw32-g++
        cmake --build build-mingw --target all

    - name: Add msbuild to PATH
      if: startsWith(matrix.os, 'windows')
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Build on windows
      if: startsWith(matrix.os, 'windows')
      run: |
        cmake -G "Visual Studio 15 2017" -DGOLDSOURCE_SUPPORT=ON
        msbuild INSTALL.vcxproj

